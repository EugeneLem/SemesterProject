%%Constant Setting
%System
A=[0.86719   ,6.6936*10^(-5)     ,-0.19095  ,0; ...
    -0.027773, 0.99895           , 0.89264, -1.9609; ...
      0.20146, -2.1676*10^(-4)     , 0.88379,  0; ....
      0.2    ,  0                  ,  0      , 1];
B=[-3.7758 *10^(-3)  , -9.0408*10^(-3);...
    0                ,0;...
      -1.2629*10^(-3), -3.2794*10^(-4);...
     0              ,0];
%Cost function 
Q=diag([34.38, 0, 0, 103.13]);
R=zeros(2,2);
R_delta=diag([0.02,10]);
P_k=zeros(6,6);
%horizon
horizon=20;
%constraint
C_u=[1 0 ; 0,1 ; -1,0 ; 0,-1];
c_u=[15;4.6;-25;-10.4];%Need to check is elevator and THS are not inverted
C_u_delta=[-1 0 1 0;...
            0 -1 0 1;...
           1   0 -1 0;...
           0   1  0  -1];
c_u_delta=[37;0.236;-37;0.236];%Need to check is elevator and THS are not inverted


%%Let's simulate our system
stepNumber=100;
for k=0:stepNumber                     

    %%MPC!!!!!!!!
    x=sdpvar(4,horizon);
    u=sdpvar(2,horizon);
    con = [];
    obj = 0;
    
    for i = 1:horiton-1 
        con = [con , x(:,i+1) == A*x(:,i) + B*u(:,i)]; % System dynamics
        con = [con , C_u*u(:,i) <= c_u];                 % Input constraints
        con = [con , C_u_du*u(:,i) <= c_u_delta];               % Input constraints
        obj = obj + x(:,i)'*Q*x(:,i) + u(:,i)'*R*u(:,i);  % Cost function
    end
    
end
